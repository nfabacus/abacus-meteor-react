{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/kadira:flow-router-ssr/test/client/triggers.js","filenameRelative":"/packages/kadira:flow-router-ssr/test/client/triggers.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/kadira:flow-router-ssr/test/client/triggers.js.map","sourceFileName":"/packages/kadira:flow-router-ssr/test/client/triggers.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"triggers"},"ignored":false,"code":"Tinytest.addAsync('Triggers - runTriggers - run all and after', function (test, done) {\n  var store = [];\n  var triggers = MakeTriggers(2, store);\n  Triggers.runTriggers(triggers, null, null, function () {\n    test.equal(store, [0, 1]);\n    done();\n  });\n});\n\nTinytest.addAsync('Triggers - runTriggers - redirect with url', function (test, done) {\n  var store = [];\n  var url = 'http://google.com';\n  var triggers = MakeTriggers(2, store);\n  triggers.splice(1, 0, function (context, redirect) {\n    redirect(url);\n  });\n\n  Triggers.runTriggers(triggers, null, function (u) {\n    test.equal(store, [0]);\n    test.equal(u, url);\n    done();\n  }, null);\n});\n\nTinytest.addAsync('Triggers - runTriggers - redirect without url', function (test, done) {\n  var store = [];\n  var url = 'http://google.com';\n  var triggers = MakeTriggers(2, store);\n  triggers.splice(1, 0, function (context, redirect) {\n    try {\n      redirect();\n    } catch (ex) {\n      test.isTrue(/requires an URL/.test(ex.message));\n      test.equal(store, [0]);\n      done();\n    }\n  });\n\n  Triggers.runTriggers(triggers, null, null, null);\n});\n\nTinytest.addAsync('Triggers - runTriggers - redirect in a different event loop', function (test, done) {\n  var store = [];\n  var url = 'http://google.com';\n  var triggers = MakeTriggers(2, store);\n  var doneCalled = false;\n\n  triggers.splice(1, 0, function (context, redirect) {\n    setTimeout(function () {\n      try {\n        redirect(url);\n      } catch (ex) {\n        test.isTrue(/sync/.test(ex.message));\n        test.equal(store, [0, 1]);\n        test.isTrue(doneCalled);\n        done();\n      }\n    }, 0);\n  });\n\n  Triggers.runTriggers(triggers, null, null, function () {\n    doneCalled = true;\n  });\n});\n\nTinytest.addAsync('Triggers - runTriggers - redirect called multiple times', function (test, done) {\n  var store = [];\n  var url = 'http://google.com';\n  var triggers = MakeTriggers(2, store);\n  var redirectCalled = false;\n\n  triggers.splice(1, 0, function (context, redirect) {\n    redirect(url);\n    try {\n      redirect(url);\n    } catch (ex) {\n      test.isTrue(/already redirected/.test(ex.message));\n      test.equal(store, [0]);\n      test.isTrue(redirectCalled);\n      done();\n    }\n  });\n\n  Triggers.runTriggers(triggers, null, function () {\n    redirectCalled = true;\n  }, null);\n});\n\nTinytest.addAsync('Triggers - runTriggers - stop callback', function (test, done) {\n  var store = [];\n  var triggers = MakeTriggers(2, store);\n  triggers.splice(1, 0, function (context, redirect, stop) {\n    stop();\n  });\n\n  Triggers.runTriggers(triggers, null, null, function () {\n    store.push(2);\n  });\n\n  test.equal(store, [0]);\n  done();\n});\n\nTinytest.addAsync('Triggers - runTriggers - get context', function (test, done) {\n  var context = {};\n  var trigger = function trigger(c) {\n    test.equal(c, context);\n    done();\n  };\n\n  Triggers.runTriggers([trigger], context, function () {}, function () {});\n});\n\nTinytest.addAsync('Triggers - createRouteBoundTriggers - matching trigger', function (test, done) {\n  var context = { route: { name: 'abc' } };\n  var redirect = function redirect() {};\n\n  var trigger = function trigger(c, r) {\n    test.equal(c, context);\n    test.equal(r, redirect);\n    done();\n  };\n\n  var triggers = Triggers.createRouteBoundTriggers([trigger], ['abc']);\n  triggers[0](context, redirect);\n});\n\nTinytest.addAsync('Triggers - createRouteBoundTriggers - multiple matching triggers', function (test, done) {\n  var context = { route: { name: 'abc' } };\n  var redirect = function redirect() {};\n  var doneCount = 0;\n\n  var trigger = function trigger(c, r) {\n    test.equal(c, context);\n    test.equal(r, redirect);\n    doneCount++;\n  };\n\n  var triggers = Triggers.createRouteBoundTriggers([trigger, trigger], ['abc']);\n  triggers[0](context, redirect);\n  triggers[1](context, redirect);\n\n  test.equal(doneCount, 2);\n  done();\n});\n\nTinytest.addAsync('Triggers - createRouteBoundTriggers - no matching trigger', function (test, done) {\n  var context = { route: { name: 'some-other-route' } };\n  var redirect = function redirect() {};\n  var doneCount = 0;\n\n  var trigger = function trigger(c, r) {\n    test.equal(c, context);\n    test.equal(r, redirect);\n    doneCount++;\n  };\n\n  var triggers = Triggers.createRouteBoundTriggers([trigger], ['abc']);\n  triggers[0](context, redirect);\n\n  test.equal(doneCount, 0);\n  done();\n});\n\nTinytest.addAsync('Triggers - createRouteBoundTriggers - negate logic', function (test, done) {\n  var context = { route: { name: 'some-other-route' } };\n  var redirect = function redirect() {};\n  var doneCount = 0;\n\n  var trigger = function trigger(c, r) {\n    test.equal(c, context);\n    test.equal(r, redirect);\n    doneCount++;\n  };\n\n  var triggers = Triggers.createRouteBoundTriggers([trigger], ['abc'], true);\n  triggers[0](context, redirect);\n\n  test.equal(doneCount, 1);\n  done();\n});\n\nTinytest.addAsync('Triggers - applyFilters - no filters', function (test, done) {\n  var original = [];\n  test.equal(Triggers.applyFilters(original), original);\n  done();\n});\n\nTinytest.addAsync('Triggers - applyFilters - single trigger to array', function (test, done) {\n  var original = function original() {};\n  test.equal(Triggers.applyFilters(original)[0], original);\n  done();\n});\n\nTinytest.addAsync('Triggers - applyFilters - only and except both', function (test, done) {\n  var original = [];\n  try {\n    Triggers.applyFilters(original, { only: [], except: [] });\n  } catch (ex) {\n    test.isTrue(/only and except/.test(ex.message));\n    done();\n  }\n});\n\nTinytest.addAsync('Triggers - applyFilters - only is not an array', function (test, done) {\n  var original = [];\n  try {\n    Triggers.applyFilters(original, { only: 'name' });\n  } catch (ex) {\n    test.isTrue(/to be an array/.test(ex.message));\n    done();\n  }\n});\n\nTinytest.addAsync('Triggers - applyFilters - except is not an array', function (test, done) {\n  var original = [];\n  try {\n    Triggers.applyFilters(original, { except: 'name' });\n  } catch (ex) {\n    test.isTrue(/to be an array/.test(ex.message));\n    done();\n  }\n});\n\nTinytest.addAsync('Triggers - applyFilters - unsupported filter', function (test, done) {\n  var original = [];\n  try {\n    Triggers.applyFilters(original, { wowFilter: [] });\n  } catch (ex) {\n    test.isTrue(/not supported/.test(ex.message));\n    done();\n  }\n});\n\nTinytest.addAsync('Triggers - applyFilters - just only filter', function (test, done) {\n  var bounded = Triggers.applyFilters(done, { only: ['abc'] });\n  bounded[0]({ route: { name: 'abc' } });\n});\n\nTinytest.addAsync('Triggers - applyFilters - just except filter', function (test, done) {\n  var bounded = Triggers.applyFilters(done, { except: ['abc'] });\n  bounded[0]({ route: { name: 'some-other' } });\n});\n\nfunction MakeTriggers(count, store) {\n  var triggers = [];\n\n  function addTrigger(no) {\n    triggers.push(function () {\n      store.push(no);\n    });\n  }\n\n  for (var lc = 0; lc < count; lc++) {\n    addTrigger(lc);\n  }\n  return triggers;\n}","ast":null,"map":{"version":3,"sources":["/packages/kadira:flow-router-ssr/test/client/triggers.js"],"names":[],"mappings":"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","file":"/packages/kadira:flow-router-ssr/test/client/triggers.js.map","sourcesContent":["Tinytest.addAsync(\n'Triggers - runTriggers - run all and after',\nfunction(test, done) {\n  var store = [];\n  var triggers = MakeTriggers(2, store);\n  Triggers.runTriggers(triggers, null, null, function() {\n    test.equal(store, [0, 1]);\n    done();\n  });\n});\n\nTinytest.addAsync(\n'Triggers - runTriggers - redirect with url',\nfunction(test, done) {\n  var store = [];\n  var url = 'http://google.com';\n  var triggers = MakeTriggers(2, store);\n  triggers.splice(1, 0, function(context, redirect) {\n    redirect(url);\n  });\n\n  Triggers.runTriggers(triggers, null, function(u) {\n    test.equal(store, [0]);\n    test.equal(u, url);\n    done();\n  }, null);\n});\n\nTinytest.addAsync(\n'Triggers - runTriggers - redirect without url',\nfunction(test, done) {\n  var store = [];\n  var url = 'http://google.com';\n  var triggers = MakeTriggers(2, store);\n  triggers.splice(1, 0, function(context, redirect) {\n    try {\n      redirect();\n    } catch (ex) {\n      test.isTrue(/requires an URL/.test(ex.message));\n      test.equal(store, [0]);\n      done();\n    }\n  });\n\n  Triggers.runTriggers(triggers, null, null, null);\n});\n\nTinytest.addAsync(\n'Triggers - runTriggers - redirect in a different event loop',\nfunction(test, done) {\n  var store = [];\n  var url = 'http://google.com';\n  var triggers = MakeTriggers(2, store);\n  var doneCalled = false;\n\n  triggers.splice(1, 0, function(context, redirect) {\n    setTimeout(function() {\n      try {\n        redirect(url);\n      } catch (ex) {\n        test.isTrue(/sync/.test(ex.message));\n        test.equal(store, [0, 1]);\n        test.isTrue(doneCalled);\n        done();\n      }\n    }, 0);\n  });\n\n  Triggers.runTriggers(triggers, null, null, function() {\n    doneCalled = true;\n  });\n});\n\nTinytest.addAsync(\n'Triggers - runTriggers - redirect called multiple times',\nfunction(test, done) {\n  var store = [];\n  var url = 'http://google.com';\n  var triggers = MakeTriggers(2, store);\n  var redirectCalled = false;\n\n  triggers.splice(1, 0, function(context, redirect) {\n    redirect(url);\n    try {\n      redirect(url);\n    } catch (ex) {\n      test.isTrue(/already redirected/.test(ex.message));\n      test.equal(store, [0]);\n      test.isTrue(redirectCalled);\n      done();\n    }\n  });\n\n  Triggers.runTriggers(triggers, null, function() {\n    redirectCalled = true;\n  }, null);\n});\n\nTinytest.addAsync(\n'Triggers - runTriggers - stop callback',\nfunction(test, done) {\n  var store = [];\n  var triggers = MakeTriggers(2, store);\n  triggers.splice(1, 0, function(context, redirect, stop) {\n    stop();\n  });\n\n  Triggers.runTriggers(triggers, null, null, function() {\n    store.push(2);\n  });\n\n  test.equal(store, [0]);\n  done();\n});\n\n\nTinytest.addAsync(\n'Triggers - runTriggers - get context',\nfunction(test, done) {\n  var context = {};\n  var trigger = function(c) {\n    test.equal(c, context);\n    done();\n  };\n\n  Triggers.runTriggers([trigger], context, function() {}, function() {});\n});\n\nTinytest.addAsync(\n'Triggers - createRouteBoundTriggers - matching trigger',\nfunction(test, done) {\n  var context = {route: {name: 'abc'}};\n  var redirect = function() {};\n\n  var trigger = function(c, r) {\n    test.equal(c, context);\n    test.equal(r, redirect);\n    done();\n  };\n\n  var triggers = Triggers.createRouteBoundTriggers([trigger], ['abc']);\n  triggers[0](context, redirect);\n});\n\nTinytest.addAsync(\n'Triggers - createRouteBoundTriggers - multiple matching triggers',\nfunction(test, done) {\n  var context = {route: {name: 'abc'}};\n  var redirect = function() {};\n  var doneCount = 0;\n\n  var trigger = function(c, r) {\n    test.equal(c, context);\n    test.equal(r, redirect);\n    doneCount++;\n  };\n\n  var triggers = Triggers.createRouteBoundTriggers([trigger, trigger], ['abc']);\n  triggers[0](context, redirect);\n  triggers[1](context, redirect);\n\n  test.equal(doneCount, 2);\n  done();\n});\n\nTinytest.addAsync(\n'Triggers - createRouteBoundTriggers - no matching trigger',\nfunction(test, done) {\n  var context = {route: {name: 'some-other-route'}};\n  var redirect = function() {};\n  var doneCount = 0;\n\n  var trigger = function(c, r) {\n    test.equal(c, context);\n    test.equal(r, redirect);\n    doneCount++;\n  };\n\n  var triggers = Triggers.createRouteBoundTriggers([trigger], ['abc']);\n  triggers[0](context, redirect);\n\n  test.equal(doneCount, 0);\n  done();\n});\n\nTinytest.addAsync(\n'Triggers - createRouteBoundTriggers - negate logic',\nfunction(test, done) {\n  var context = {route: {name: 'some-other-route'}};\n  var redirect = function() {};\n  var doneCount = 0;\n\n  var trigger = function(c, r) {\n    test.equal(c, context);\n    test.equal(r, redirect);\n    doneCount++;\n  };\n\n  var triggers = Triggers.createRouteBoundTriggers([trigger], ['abc'], true);\n  triggers[0](context, redirect);\n\n  test.equal(doneCount, 1);\n  done();\n});\n\nTinytest.addAsync(\n'Triggers - applyFilters - no filters',\nfunction(test, done) {\n  var original = [];\n  test.equal(Triggers.applyFilters(original), original);\n  done();\n});\n\nTinytest.addAsync(\n'Triggers - applyFilters - single trigger to array',\nfunction(test, done) {\n  var original = function() {};\n  test.equal(Triggers.applyFilters(original)[0], original);\n  done();\n});\n\nTinytest.addAsync(\n'Triggers - applyFilters - only and except both',\nfunction(test, done) {\n  var original = [];\n  try {\n    Triggers.applyFilters(original, {only: [], except: []});\n  } catch (ex) {\n    test.isTrue(/only and except/.test(ex.message));\n    done();\n  }\n});\n\nTinytest.addAsync(\n'Triggers - applyFilters - only is not an array',\nfunction(test, done) {\n  var original = [];\n  try {\n    Triggers.applyFilters(original, {only: 'name'});\n  } catch (ex) {\n    test.isTrue(/to be an array/.test(ex.message));\n    done();\n  }\n});\n\nTinytest.addAsync(\n'Triggers - applyFilters - except is not an array',\nfunction(test, done) {\n  var original = [];\n  try {\n    Triggers.applyFilters(original, {except: 'name'});\n  } catch (ex) {\n    test.isTrue(/to be an array/.test(ex.message));\n    done();\n  }\n});\n\nTinytest.addAsync(\n'Triggers - applyFilters - unsupported filter',\nfunction(test, done) {\n  var original = [];\n  try {\n    Triggers.applyFilters(original, {wowFilter: []});\n  } catch (ex) {\n    test.isTrue(/not supported/.test(ex.message));\n    done();\n  }\n});\n\nTinytest.addAsync(\n'Triggers - applyFilters - just only filter',\nfunction(test, done) {\n  var bounded = Triggers.applyFilters(done, {only: ['abc']});\n  bounded[0]({route: {name: 'abc'}});\n});\n\nTinytest.addAsync(\n'Triggers - applyFilters - just except filter',\nfunction(test, done) {\n  var bounded = Triggers.applyFilters(done, {except: ['abc']});\n  bounded[0]({route: {name: 'some-other'}});\n});\n\nfunction MakeTriggers(count, store) {\n  var triggers = [];\n\n  function addTrigger(no) {\n    triggers.push(function() {\n      store.push(no);\n    });\n  }\n\n  for (var lc = 0; lc < count; lc++) {\n    addTrigger(lc);\n  }\n  return triggers;\n}\n"]},"hash":"adadf05f6748b9368aaabd6c2c75b4cd7222bd32"}
