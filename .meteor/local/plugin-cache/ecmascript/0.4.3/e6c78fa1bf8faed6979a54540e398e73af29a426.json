{"metadata":{"usedHelpers":["interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"chai","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"chai"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/kadira:flow-router-ssr/test/_engine/utils.js","filenameRelative":"/packages/kadira:flow-router-ssr/test/_engine/utils.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/kadira:flow-router-ssr/test/_engine/utils.js.map","sourceFileName":"/packages/kadira:flow-router-ssr/test/_engine/utils.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"utils"},"ignored":false,"code":"var _chai = require('chai');\n\nvar _chai2 = _interopRequireDefault(_chai);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nexpect = _chai2['default'].expect;\n\n/**\n * Wraps a function in a try/catch statement, and calls the done function with the caught exception.\n * @param done Mocha(ish) done function.\n * @param fn function being wrapped.\n */\ncatchable = function catchable(done, fn) {\n  try {\n    fn();\n  } catch (e) {\n    done(e);\n  }\n};\n\n/**\n * Creates a promise out of a function that uses a callback with params: (error, result).\n * @param fn Function to wraps as a promise.\n * @param args function arguments.\n * @returns {Promise} Promise version of the function.\n */\npromisify = function promisify(fn) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return new Promise(function (resolve, reject) {\n    args.push(function (error, result) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(result);\n      }\n    });\n    fn.apply(undefined, args);\n  });\n};","ast":null,"map":{"version":3,"sources":["/packages/kadira:flow-router-ssr/test/_engine/utils.js"],"names":[],"mappings":"AAAA;;;;;;AAEA,SAAS,kBAAK,MAAL;;;;;;;AAOT,YAAY,mBAAS,IAAT,EAAe,EAAf,EAAmB;AAC7B,MAAI;AACF,SADE;GAAJ,CAEE,OAAM,CAAN,EAAS;AACT,SAAK,CAAL,EADS;GAAT;CAHQ;;;;;;;;AAcZ,YAAY,mBAAS,EAAT,EAAsB;oCAAN;;GAAM;;AAChC,SAAO,IAAI,OAAJ,CAAY,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AAC3C,SAAK,IAAL,CAAU,UAAS,KAAT,EAAgB,MAAhB,EAAwB;AAChC,UAAI,KAAJ,EAAW;AACT,eAAO,KAAP,EADS;OAAX,MAEO;AACL,gBAAQ,MAAR,EADK;OAFP;KADQ,CAAV,CAD2C;AAQ3C,wBAAM,IAAN,EAR2C;GAA1B,CAAnB,CADgC;CAAtB","file":"/packages/kadira:flow-router-ssr/test/_engine/utils.js.map","sourcesContent":["import chai from 'chai';\n\nexpect = chai.expect;\n\n/**\n * Wraps a function in a try/catch statement, and calls the done function with the caught exception.\n * @param done Mocha(ish) done function.\n * @param fn function being wrapped.\n */\ncatchable = function(done, fn) {\n  try {\n    fn();\n  } catch(e) {\n    done(e);\n  }\n};\n\n/**\n * Creates a promise out of a function that uses a callback with params: (error, result).\n * @param fn Function to wraps as a promise.\n * @param args function arguments.\n * @returns {Promise} Promise version of the function.\n */\npromisify = function(fn, ...args) {\n  return new Promise(function(resolve, reject) {\n    args.push(function(error, result) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(result);\n      }\n    });\n    fn(...args);\n  });\n};\n"]},"hash":"e6c78fa1bf8faed6979a54540e398e73af29a426"}
