[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Buffer = Package.modules.Buffer;\nvar process = Package.modules.process;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar npmLoadScript, DocHead;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"kadira:dochead\":{\"main.js\":[\"load-script\",function(require){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// packages/kadira_dochead/main.js                                                                         //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\nnpmLoadScript = require('load-script');                                                                    // 1\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"lib\":{\"both.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// packages/kadira_dochead/lib/both.js                                                                     //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\nvar FlowRouter = null;                                                                                     // 1\nif (Package['kadira:flow-router-ssr']) {                                                                   // 2\n  FlowRouter = Package['kadira:flow-router-ssr'].FlowRouter;                                               // 3\n}                                                                                                          //\n                                                                                                           //\nif (Meteor.isClient) {                                                                                     // 6\n  var titleDependency = new Tracker.Dependency();                                                          // 7\n}                                                                                                          //\n                                                                                                           //\nDocHead = {                                                                                                // 10\n  currentTitle: null,                                                                                      // 11\n  setTitle: function () {                                                                                  // 12\n    function setTitle(title) {                                                                             //\n      if (Meteor.isClient) {                                                                               // 13\n        titleDependency.changed();                                                                         // 14\n        document.title = title;                                                                            // 15\n      } else {                                                                                             //\n        this.currentTitle = title;                                                                         // 17\n        var titleHtml = '<title>' + title + '</title>';                                                    // 18\n        this._addToHead(titleHtml);                                                                        // 19\n      }                                                                                                    //\n    }                                                                                                      //\n                                                                                                           //\n    return setTitle;                                                                                       //\n  }(),                                                                                                     //\n  addMeta: function () {                                                                                   // 22\n    function addMeta(info) {                                                                               //\n      this._addTag(info, 'meta');                                                                          // 23\n    }                                                                                                      //\n                                                                                                           //\n    return addMeta;                                                                                        //\n  }(),                                                                                                     //\n  addLink: function () {                                                                                   // 25\n    function addLink(info) {                                                                               //\n      this._addTag(info, 'link');                                                                          // 26\n    }                                                                                                      //\n                                                                                                           //\n    return addLink;                                                                                        //\n  }(),                                                                                                     //\n  getTitle: function () {                                                                                  // 28\n    function getTitle() {                                                                                  //\n      if (Meteor.isClient) {                                                                               // 29\n        titleDependency.depend();                                                                          // 30\n        return document.title;                                                                             // 31\n      }                                                                                                    //\n      return this.currentTitle;                                                                            // 33\n    }                                                                                                      //\n                                                                                                           //\n    return getTitle;                                                                                       //\n  }(),                                                                                                     //\n  addLdJsonScript: function () {                                                                           // 35\n    function addLdJsonScript(jsonObj) {                                                                    //\n      var strObj = JSON.stringify(jsonObj);                                                                // 36\n      this._addLdJsonScript(strObj);                                                                       // 37\n    }                                                                                                      //\n                                                                                                           //\n    return addLdJsonScript;                                                                                //\n  }(),                                                                                                     //\n  loadScript: function () {                                                                                // 39\n    function loadScript(url, options, callback) {                                                          //\n      if (Meteor.isClient) {                                                                               // 40\n        npmLoadScript(url, options, callback);                                                             // 41\n      }                                                                                                    //\n    }                                                                                                      //\n                                                                                                           //\n    return loadScript;                                                                                     //\n  }(),                                                                                                     //\n  _addTag: function () {                                                                                   // 44\n    function _addTag(info, tag) {                                                                          //\n      var meta = this._buildTag(info, tag);                                                                // 45\n      if (Meteor.isClient) {                                                                               // 46\n        document.getElementsByTagName('head')[0].insertAdjacentHTML('beforeend', meta);                    // 47\n      } else {                                                                                             //\n        this._addToHead(meta);                                                                             // 49\n      }                                                                                                    //\n    }                                                                                                      //\n                                                                                                           //\n    return _addTag;                                                                                        //\n  }(),                                                                                                     //\n  _addToHead: function () {                                                                                // 52\n    function _addToHead(html) {                                                                            //\n      // only work there is kadira:flow-router-ssr                                                         //\n      if (!FlowRouter) {                                                                                   // 54\n        return;                                                                                            // 55\n      }                                                                                                    //\n      var ssrContext = FlowRouter.ssrContext.get();                                                        // 57\n      if (ssrContext) {                                                                                    // 58\n        ssrContext.addToHead(html);                                                                        // 59\n      }                                                                                                    //\n    }                                                                                                      //\n                                                                                                           //\n    return _addToHead;                                                                                     //\n  }(),                                                                                                     //\n  _buildTag: function () {                                                                                 // 62\n    function _buildTag(metaInfo, type) {                                                                   //\n      var props = \"\";                                                                                      // 63\n      for (var key in meteorBabelHelpers.sanitizeForInObject(metaInfo)) {                                  // 64\n        props += key + '=\"' + metaInfo[key] + '\" ';                                                        // 65\n      }                                                                                                    //\n      props += 'dochead=\"1\"';                                                                              // 67\n      var meta = '<' + type + ' ' + props + '/>';                                                          // 68\n      return meta;                                                                                         // 69\n    }                                                                                                      //\n                                                                                                           //\n    return _buildTag;                                                                                      //\n  }(),                                                                                                     //\n  _addLdJsonScript: function () {                                                                          // 71\n    function _addLdJsonScript(stringifiedObject) {                                                         //\n      var scriptTag = '<script type=\"application/ld+json\" dochead=\"1\">' + stringifiedObject + '</script>';\n      if (Meteor.isClient) {                                                                               // 73\n        document.getElementsByTagName('head')[0].insertAdjacentHTML('beforeend', scriptTag);               // 74\n      } else {                                                                                             //\n        this._addToHead(scriptTag);                                                                        // 76\n      }                                                                                                    //\n    }                                                                                                      //\n                                                                                                           //\n    return _addLdJsonScript;                                                                               //\n  }(),                                                                                                     //\n  removeDocHeadAddedTags: function () {                                                                    // 79\n    function removeDocHeadAddedTags() {                                                                    //\n      if (Meteor.isClient) {                                                                               // 80\n        var elements = document.querySelectorAll('[dochead=\"1\"]');                                         // 81\n        // We use for-of here to loop only over iterable objects                                           //\n        for (var _iterator = elements, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n          var _ref;                                                                                        //\n                                                                                                           //\n          if (_isArray) {                                                                                  //\n            if (_i >= _iterator.length) break;                                                             //\n            _ref = _iterator[_i++];                                                                        //\n          } else {                                                                                         //\n            _i = _iterator.next();                                                                         //\n            if (_i.done) break;                                                                            //\n            _ref = _i.value;                                                                               //\n          }                                                                                                //\n                                                                                                           //\n          var element = _ref;                                                                              //\n                                                                                                           //\n          element.parentNode.removeChild(element);                                                         // 84\n        }                                                                                                  //\n      }                                                                                                    //\n    }                                                                                                      //\n                                                                                                           //\n    return removeDocHeadAddedTags;                                                                         //\n  }()                                                                                                      //\n};                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"flow_router.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// packages/kadira_dochead/lib/flow_router.js                                                              //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\nif (Package['kadira:flow-router-ssr']) {                                                                   // 1\n  var FlowRouter = Package['kadira:flow-router-ssr'].FlowRouter;                                           // 2\n  // remove added tags when changing routes                                                                //\n  FlowRouter.triggers.enter(function () {                                                                  // 1\n    Meteor.startup(DocHead.removeDocHeadAddedTags);                                                        // 5\n  });                                                                                                      //\n}                                                                                                          //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"node_modules\":{\"load-script\":{\"package.json\":function(require,exports){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// ../npm/node_modules/load-script/package.json                                                            //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\nexports.name = \"load-script\";                                                                              // 1\nexports.version = \"1.0.0\";                                                                                 // 2\n                                                                                                           // 3\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// node_modules/meteor/kadira:dochead/node_modules/load-script/index.js                                    //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\n                                                                                                           // 1\nmodule.exports = function load (src, opts, cb) {                                                           // 2\n  var head = document.head || document.getElementsByTagName('head')[0]                                     // 3\n  var script = document.createElement('script')                                                            // 4\n                                                                                                           // 5\n  if (typeof opts === 'function') {                                                                        // 6\n    cb = opts                                                                                              // 7\n    opts = {}                                                                                              // 8\n  }                                                                                                        // 9\n                                                                                                           // 10\n  opts = opts || {}                                                                                        // 11\n  cb = cb || function() {}                                                                                 // 12\n                                                                                                           // 13\n  script.type = opts.type || 'text/javascript'                                                             // 14\n  script.charset = opts.charset || 'utf8';                                                                 // 15\n  script.async = 'async' in opts ? !!opts.async : true                                                     // 16\n  script.src = src                                                                                         // 17\n                                                                                                           // 18\n  if (opts.attrs) {                                                                                        // 19\n    setAttributes(script, opts.attrs)                                                                      // 20\n  }                                                                                                        // 21\n                                                                                                           // 22\n  if (opts.text) {                                                                                         // 23\n    script.text = '' + opts.text                                                                           // 24\n  }                                                                                                        // 25\n                                                                                                           // 26\n  var onend = 'onload' in script ? stdOnEnd : ieOnEnd                                                      // 27\n  onend(script, cb)                                                                                        // 28\n                                                                                                           // 29\n  // some good legacy browsers (firefox) fail the 'in' detection above                                     // 30\n  // so as a fallback we always set onload                                                                 // 31\n  // old IE will ignore this and new IE will set onload                                                    // 32\n  if (!script.onload) {                                                                                    // 33\n    stdOnEnd(script, cb);                                                                                  // 34\n  }                                                                                                        // 35\n                                                                                                           // 36\n  head.appendChild(script)                                                                                 // 37\n}                                                                                                          // 38\n                                                                                                           // 39\nfunction setAttributes(script, attrs) {                                                                    // 40\n  for (var attr in attrs) {                                                                                // 41\n    script.setAttribute(attr, attrs[attr]);                                                                // 42\n  }                                                                                                        // 43\n}                                                                                                          // 44\n                                                                                                           // 45\nfunction stdOnEnd (script, cb) {                                                                           // 46\n  script.onload = function () {                                                                            // 47\n    this.onerror = this.onload = null                                                                      // 48\n    cb(null, script)                                                                                       // 49\n  }                                                                                                        // 50\n  script.onerror = function () {                                                                           // 51\n    // this.onload = null here is necessary                                                                // 52\n    // because even IE9 works not like others                                                              // 53\n    this.onerror = this.onload = null                                                                      // 54\n    cb(new Error('Failed to load ' + this.src), script)                                                    // 55\n  }                                                                                                        // 56\n}                                                                                                          // 57\n                                                                                                           // 58\nfunction ieOnEnd (script, cb) {                                                                            // 59\n  script.onreadystatechange = function () {                                                                // 60\n    if (this.readyState != 'complete' && this.readyState != 'loaded') return                               // 61\n    this.onreadystatechange = null                                                                         // 62\n    cb(null, script) // there is no way to catch loading errors in IE8                                     // 63\n  }                                                                                                        // 64\n}                                                                                                          // 65\n                                                                                                           // 66\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./node_modules/meteor/kadira:dochead/main.js\");\nrequire(\"./node_modules/meteor/kadira:dochead/lib/both.js\");\nrequire(\"./node_modules/meteor/kadira:dochead/lib/flow_router.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['kadira:dochead'] = {}, {\n  DocHead: DocHead\n});\n\n})();\n","servePath":"/packages/kadira_dochead.js","sourceMap":{"version":3,"sources":["/packages/kadira:dochead/main.js","/packages/kadira:dochead/lib/both.js","/packages/kadira:dochead/lib/flow_router.js","../npm/node_modules/load-script/package.json","node_modules/meteor/kadira:dochead/node_modules/load-script/index.js"],"names":[],"mappings":"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","file":"/packages/kadira_dochead.js","sourcesContent":["npmLoadScript = require('load-script');\n","var FlowRouter = null;\nif (Package['kadira:flow-router-ssr']) {\n  FlowRouter = Package['kadira:flow-router-ssr'].FlowRouter;\n}\n\nif (Meteor.isClient) {\n  var titleDependency = new Tracker.Dependency();\n}\n\nDocHead = {\n  currentTitle: null,\n  setTitle(title) {\n    if (Meteor.isClient) {\n      titleDependency.changed();\n      document.title = title;\n    } else {\n      this.currentTitle = title;\n      const titleHtml = `<title>${title}</title>`;\n      this._addToHead(titleHtml);\n    }\n  },\n  addMeta(info) {\n    this._addTag(info, 'meta');\n  },\n  addLink(info) {\n    this._addTag(info, 'link');\n  },\n  getTitle() {\n    if (Meteor.isClient) {\n      titleDependency.depend();\n      return document.title;\n    }\n    return this.currentTitle;\n  },\n  addLdJsonScript(jsonObj) {\n    const strObj = JSON.stringify(jsonObj);\n    this._addLdJsonScript(strObj);\n  },\n  loadScript(url, options, callback) {\n    if (Meteor.isClient) {\n      npmLoadScript(url, options, callback);\n    }\n  },\n  _addTag(info, tag) {\n    const meta = this._buildTag(info, tag);\n    if (Meteor.isClient) {\n      document.getElementsByTagName('head')[0].insertAdjacentHTML('beforeend', meta);\n    } else {\n      this._addToHead(meta);\n    }\n  },\n  _addToHead(html) {\n    // only work there is kadira:flow-router-ssr\n    if (!FlowRouter) {\n      return;\n    }\n    let ssrContext = FlowRouter.ssrContext.get();\n    if (ssrContext) {\n      ssrContext.addToHead(html);\n    }\n  },\n  _buildTag(metaInfo, type) {\n    let props = \"\";\n    for (let key in metaInfo) {\n      props += `${key}=\"${metaInfo[key]}\" `;\n    }\n    props += 'dochead=\"1\"';\n    var meta = `<${type} ${props}/>`;\n    return meta;\n  },\n  _addLdJsonScript(stringifiedObject) {\n    const scriptTag = `<script type=\"application/ld+json\" dochead=\"1\">${stringifiedObject}</script>`;\n    if (Meteor.isClient) {\n      document.getElementsByTagName('head')[0].insertAdjacentHTML('beforeend', scriptTag);\n    } else {\n      this._addToHead(scriptTag);\n    }\n  },\n  removeDocHeadAddedTags() {\n    if (Meteor.isClient) {\n      const elements = document.querySelectorAll('[dochead=\"1\"]');\n      // We use for-of here to loop only over iterable objects\n      for (let element of elements) {\n        element.parentNode.removeChild(element);\n      }\n    }\n  }\n};\n","if(Package['kadira:flow-router-ssr']) {\n  var FlowRouter = Package['kadira:flow-router-ssr'].FlowRouter;\n  // remove added tags when changing routes\n  FlowRouter.triggers.enter(function() {\n    Meteor.startup(DocHead.removeDocHeadAddedTags);\n  });\n}\n","exports.name = \"load-script\";\nexports.version = \"1.0.0\";\n","\nmodule.exports = function load (src, opts, cb) {\n  var head = document.head || document.getElementsByTagName('head')[0]\n  var script = document.createElement('script')\n\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n\n  opts = opts || {}\n  cb = cb || function() {}\n\n  script.type = opts.type || 'text/javascript'\n  script.charset = opts.charset || 'utf8';\n  script.async = 'async' in opts ? !!opts.async : true\n  script.src = src\n\n  if (opts.attrs) {\n    setAttributes(script, opts.attrs)\n  }\n\n  if (opts.text) {\n    script.text = '' + opts.text\n  }\n\n  var onend = 'onload' in script ? stdOnEnd : ieOnEnd\n  onend(script, cb)\n\n  // some good legacy browsers (firefox) fail the 'in' detection above\n  // so as a fallback we always set onload\n  // old IE will ignore this and new IE will set onload\n  if (!script.onload) {\n    stdOnEnd(script, cb);\n  }\n\n  head.appendChild(script)\n}\n\nfunction setAttributes(script, attrs) {\n  for (var attr in attrs) {\n    script.setAttribute(attr, attrs[attr]);\n  }\n}\n\nfunction stdOnEnd (script, cb) {\n  script.onload = function () {\n    this.onerror = this.onload = null\n    cb(null, script)\n  }\n  script.onerror = function () {\n    // this.onload = null here is necessary\n    // because even IE9 works not like others\n    this.onerror = this.onload = null\n    cb(new Error('Failed to load ' + this.src), script)\n  }\n}\n\nfunction ieOnEnd (script, cb) {\n  script.onreadystatechange = function () {\n    if (this.readyState != 'complete' && this.readyState != 'loaded') return\n    this.onreadystatechange = null\n    cb(null, script) // there is no way to catch loading errors in IE8\n  }\n}\n"]}}]