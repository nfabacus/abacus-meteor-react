[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nBert = Package['themeteorchef:bert'].Bert;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"server\":{\"methods.js\":function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/methods.js                                                 //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nMeteor.methods({                                                     // 1\n\taddResolution: function () {                                        // 2\n\t\tfunction addResolution(resolution) {                               //\n                                                                     //\n\t\t\tif (!Meteor.userId()) {                                           // 4\n\t\t\t\tthrow new Meteor.Error('not-authorised');                        // 5\n\t\t\t}                                                                 //\n\t\t\tResolutions.insert({                                              // 7\n\t\t\t\ttext: resolution,                                                // 8\n\t\t\t\tcomplete: false,                                                 // 9\n\t\t\t\tcreatedAt: new Date(),                                           // 10\n\t\t\t\tuser: Meteor.userId()                                            // 11\n\t\t\t});                                                               //\n\t\t}                                                                  //\n                                                                     //\n\t\treturn addResolution;                                              //\n\t}(),                                                                //\n\ttoggleResolution: function () {                                     // 14\n\t\tfunction toggleResolution(resolution) {                            //\n                                                                     //\n\t\t\tif (Meteor.userId() !== resolution.user) {                        // 16\n\t\t\t\tthrow new Meteor.Error('not-authorised');                        // 17\n\t\t\t}                                                                 //\n\t\t\tResolutions.update(resolution._id, {                              // 19\n\t\t\t\t$set: { complete: !resolution.complete }                         // 20\n\t\t\t});                                                               //\n\t\t}                                                                  //\n                                                                     //\n\t\treturn toggleResolution;                                           //\n\t}(),                                                                //\n\tdeleteResolution: function () {                                     // 23\n\t\tfunction deleteResolution(resolution) {                            //\n                                                                     //\n\t\t\tif (Meteor.userId() !== resolution.user) {                        // 25\n\t\t\t\tthrow new Meteor.Error('not-authorised');                        // 26\n\t\t\t}                                                                 //\n\t\t\tResolutions.remove(resolution._id);                               // 28\n\t\t}                                                                  //\n                                                                     //\n\t\treturn deleteResolution;                                           //\n\t}()                                                                 //\n});                                                                  //\n///////////////////////////////////////////////////////////////////////\n\n},\"publish.js\":function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/publish.js                                                 //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nResolutions = new Mongo.Collection(\"resolutions\");                   // 1\n                                                                     //\nMeteor.publish(\"allResolutions\", function () {                       // 3\n\treturn Resolutions.find();                                          // 4\n});                                                                  //\n                                                                     //\nMeteor.publish(\"userResolutions\", function () {                      // 7\n\treturn Resolutions.find({ user: this.userId });                     // 8\n});                                                                  //\n///////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./server/methods.js\");\nrequire(\"./server/publish.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/server/methods.js","/server/publish.js"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,OAAP,CAAe;AACd;yBAAc,YAAY;;AAEzB,OAAG,CAAC,OAAO,MAAP,EAAD,EAAkB;AACpB,UAAM,IAAI,OAAO,KAAP,CAAa,gBAAjB,CAAN,CADoB;IAArB;AAGA,eAAY,MAAZ,CAAmB;AAClB,UAAM,UAAN;AACA,cAAU,KAAV;AACA,eAAW,IAAI,IAAJ,EAAX;AACA,UAAM,OAAO,MAAP,EAAN;IAJD,EALyB;;;;IADZ;AAad;4BAAiB,YAAY;;AAE5B,OAAG,OAAO,MAAP,OAAoB,WAAW,IAAX,EAAiB;AACvC,UAAM,IAAI,OAAO,KAAP,CAAa,gBAAjB,CAAN,CADuC;IAAxC;AAGA,eAAY,MAAZ,CAAmB,WAAW,GAAX,EAAgB;AAClC,UAAM,EAAC,UAAU,CAAC,WAAW,QAAX,EAAlB;IADD,EAL4B;;;;IAbf;AAsBd;4BAAiB,YAAY;;AAE5B,OAAG,OAAO,MAAP,OAAoB,WAAW,IAAX,EAAiB;AACvC,UAAM,IAAI,OAAO,KAAP,CAAa,gBAAjB,CAAN,CADuC;IAAxC;AAGA,eAAY,MAAZ,CAAmB,WAAW,GAAX,CAAnB,CAL4B;;;;IAtBf;CAAf,sE;;;;;;;;;;;ACAA,cAAc,IAAI,MAAM,UAAN,CAAiB,aAArB,CAAd;;AAEA,OAAO,OAAP,CAAe,gBAAf,EAAiC,YAAU;AAC1C,QAAO,YAAY,IAAZ,EAAP,CAD0C;CAAV,CAAjC;;AAIA,OAAO,OAAP,CAAe,iBAAf,EAAkC,YAAU;AAC3C,QAAO,YAAY,IAAZ,CAAiB,EAAC,MAAM,KAAK,MAAL,EAAxB,CAAP,CAD2C;CAAV,CAAlC,qE","file":"/app.js","sourcesContent":["Meteor.methods({\n\taddResolution(resolution) {\n\n\t\tif(!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('not-authorised');\n\t\t}\n\t\tResolutions.insert({\n\t\t\ttext: resolution,\n\t\t\tcomplete: false,\n\t\t\tcreatedAt: new Date(),\n\t\t\tuser: Meteor.userId()\n\t\t});\t\t\n\t},\n\ttoggleResolution(resolution) {\n\n\t\tif(Meteor.userId() !== resolution.user) {\n\t\t\tthrow new Meteor.Error('not-authorised');\n\t\t}\t\t\n\t\tResolutions.update(resolution._id, {\n\t\t\t$set: {complete: !resolution.complete}\n\t\t});\n\t},\n\tdeleteResolution(resolution) {\n\n\t\tif(Meteor.userId() !== resolution.user) {\n\t\t\tthrow new Meteor.Error('not-authorised');\n\t\t}\n\t\tResolutions.remove(resolution._id);\n\t}\n});","Resolutions = new Mongo.Collection(\"resolutions\");\n\nMeteor.publish(\"allResolutions\", function(){\n\treturn Resolutions.find();\n});\n\nMeteor.publish(\"userResolutions\", function(){\n\treturn Resolutions.find({user: this.userId});\n});"]}}]