[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar _ = Package.underscore._;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Buffer = Package.modules.Buffer;\nvar process = Package.modules.process;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar TrackerReact;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"ultimatejs:tracker-react\":{\"main.js\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"./Tracker\",function(require,exports){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/ultimatejs_tracker-react/main.js                                                                        //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nexports.__esModule = true;                                                                                          //\nexports.TrackerReactMixin = undefined;                                                                              //\n                                                                                                                    //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                                             //\n                                                                                                                    //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                                    //\n                                                                                                                    //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');                       //\n                                                                                                                    //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                              //\n                                                                                                                    //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                                         //\n                                                                                                                    //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                                                //\n                                                                                                                    //\nvar _Tracker = require('./Tracker');                                                                                // 5\n                                                                                                                    //\nvar _Tracker2 = _interopRequireDefault(_Tracker);                                                                   //\n                                                                                                                    //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                   //\n                                                                                                                    //\n/**                                                                                                                 //\n * autorunRender(): The magic behind this computation is it only ever runs once after each time `render` is called.\n * When it does run that 2nd time, it's used just to force an update. The reactive function it wraps isn't even called.\n * Then on the update, the cycle repeats, and the computation is stopped, and a new one is made.                    //\n *                                                                                                                  //\n * Also, because the autorun is recreated on all React-triggered re-renders, any new code-paths possibly            //\n * taken in `render` will automatically begin tracking reactive dependencies, thereby MERGING both models of reactivity:\n * Meteor's various reactive data sources AND React's functional + unidirectional re-running of                     //\n * everything in component branches with state changes.                                                             //\n */                                                                                                                 //\n                                                                                                                    //\n/**                                                                                                                 //\n * Default. Provides a react component for inheritance as a clean alternative to mixins.                            //\n * Implementation:                                                                                                  //\n *    \"class MyApp extends TrackerReact(React.Component) { (...)\"                                                   //\n * @param Component {*} React Component                                                                             //\n */                                                                                                                 //\n                                                                                                                    //\nexports['default'] = TrackerReact = function TrackerReact(Component, opt) {                                         //\n  // No reactive computations needed for Server Side Rendering                                                      //\n  if (Meteor.isServer) return Component;                                                                            // 27\n                                                                                                                    //\n  var TrackerReactComponent = function (_Component) {                                                               //\n    (0, _inherits3['default'])(TrackerReactComponent, _Component);                                                  //\n                                                                                                                    //\n    function TrackerReactComponent() {                                                                              // 31\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {                        //\n        args[_key] = arguments[_key];                                                                               //\n      }                                                                                                             //\n                                                                                                                    //\n      (0, _classCallCheck3['default'])(this, TrackerReactComponent);                                                //\n                                                                                                                    //\n                                                                                                                    //\n      /*                                                                                                            //\n       Overloading the constructors `componentWillUnmount` method to ensure that computations are stopped and a     //\n       forceUpdate prevented, without overwriting the prototype. This is a potential bug, as of React 14.7 the      //\n       componentWillUnmount() method does not fire, if the top level component has one. It gets overwritten. This   //\n       implementation is however similar to what a transpiler would do anyway.                                      //\n        GitHub Issue: https://github.com/facebook/react/issues/6162                                                 //\n       */                                                                                                           //\n                                                                                                                    //\n      var _this = (0, _possibleConstructorReturn3['default'])(this, _Component.call.apply(_Component, [this].concat(args)));\n                                                                                                                    //\n      if (!_this.constructor.prototype._isExtended) {                                                               // 42\n        (function () {                                                                                              //\n          _this.constructor.prototype._isExtended = true;                                                           // 43\n          var superComponentWillUnmount = _this.constructor.prototype.componentWillUnmount;                         // 44\n                                                                                                                    //\n          _this.constructor.prototype.componentWillUnmount = function () {                                          // 46\n            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {            //\n              args[_key2] = arguments[_key2];                                                                       //\n            }                                                                                                       //\n                                                                                                                    //\n            superComponentWillUnmount.call.apply(superComponentWillUnmount, [this].concat(args));                   // 47\n                                                                                                                    //\n            this._renderComputation.stop();                                                                         // 49\n            this._renderComputation = null;                                                                         // 50\n          };                                                                                                        //\n        })();                                                                                                       //\n      }                                                                                                             //\n                                                                                                                    //\n      _this.autorunRender();                                                                                        // 54\n      return _this;                                                                                                 //\n    }                                                                                                               //\n                                                                                                                    //\n    TrackerReactComponent.prototype.autorunRender = function () {                                                   // 29\n      function autorunRender() {                                                                                    //\n        var _this2 = this;                                                                                          //\n                                                                                                                    //\n        var oldRender = this.render;                                                                                // 58\n                                                                                                                    //\n        this.render = function () {                                                                                 // 60\n          // Simple method we can offer in the `Meteor.Component` API                                               //\n          return _this2.autorunOnce('_renderComputation', oldRender);                                               // 62\n        };                                                                                                          //\n      }                                                                                                             //\n                                                                                                                    //\n      return autorunRender;                                                                                         //\n    }();                                                                                                            //\n                                                                                                                    //\n    TrackerReactComponent.prototype.autorunOnce = function () {                                                     // 29\n      function autorunOnce(name, dataFunc) {                                                                        //\n        return _Tracker2['default'].once(name, this, dataFunc, this.forceUpdate);                                   // 67\n      }                                                                                                             //\n                                                                                                                    //\n      return autorunOnce;                                                                                           //\n    }();                                                                                                            //\n                                                                                                                    //\n    return TrackerReactComponent;                                                                                   //\n  }(Component);                                                                                                     //\n                                                                                                                    //\n  return TrackerReactComponent;                                                                                     // 71\n};                                                                                                                  //\n                                                                                                                    //\n/**                                                                                                                 //\n * Mixin. Use with ES7 / TypeScript Decorator or Mixin-Module.                                                      //\n * Implementation:                                                                                                  //\n *   \"@TrackerReactMixin                                                                                            //\n *    class MyApp extends React.Component { (...)\"                                                                  //\n * @type {{componentWillMount: (function()), componentWillUnmount: (function()), autorunRender: (function()),       //\n *   autorunOnce: (function(*=, *=))}}                                                                              //\n */                                                                                                                 //\n/**                                                                                                                 //\n * Tracker is available as a global variable but is extended for one time computations/invalidation.                //\n * Implementation: See ./Tracker.js                                                                                 //\n */                                                                                                                 //\n                                                                                                                    //\n                                                                                                                    //\nvar TrackerReactMixin = exports.TrackerReactMixin = {                                                               // 83\n  componentWillMount: function () {                                                                                 // 84\n    function componentWillMount() {                                                                                 //\n      // No reactive computations needed for Server Side Rendering                                                  //\n      if (Meteor.isServer) return;                                                                                  // 86\n                                                                                                                    //\n      this.autorunRender();                                                                                         // 88\n    }                                                                                                               //\n                                                                                                                    //\n    return componentWillMount;                                                                                      //\n  }(),                                                                                                              //\n  componentWillUnmount: function () {                                                                               // 90\n    function componentWillUnmount() {                                                                               //\n      // No reactive computations needed for Server Side Rendering                                                  //\n      if (Meteor.isServer) return;                                                                                  // 92\n                                                                                                                    //\n      this._renderComputation.stop();                                                                               // 94\n      this._renderComputation = null;                                                                               // 95\n    }                                                                                                               //\n                                                                                                                    //\n    return componentWillUnmount;                                                                                    //\n  }(),                                                                                                              //\n  autorunRender: function () {                                                                                      // 97\n    function autorunRender() {                                                                                      //\n      var _this3 = this;                                                                                            //\n                                                                                                                    //\n      var oldRender = this.render;                                                                                  // 98\n                                                                                                                    //\n      this.render = function () {                                                                                   // 100\n        // Simple method we can offer in the `Meteor.Component` API                                                 //\n        return _this3.autorunOnce('_renderComputation', oldRender);                                                 // 102\n      };                                                                                                            //\n    }                                                                                                               //\n                                                                                                                    //\n    return autorunRender;                                                                                           //\n  }(),                                                                                                              //\n  autorunOnce: function () {                                                                                        // 105\n    function autorunOnce(name, dataFunc) {                                                                          //\n      return _Tracker2['default'].once(name, this, dataFunc, this.forceUpdate);                                     // 106\n    }                                                                                                               //\n                                                                                                                    //\n    return autorunOnce;                                                                                             //\n  }()                                                                                                               //\n};                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"Tracker.js\":[\"meteor/tracker\",function(require,exports){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/ultimatejs_tracker-react/Tracker.js                                                                     //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nexports.__esModule = true;                                                                                          //\n                                                                                                                    //\nvar _tracker = require('meteor/tracker');                                                                           // 2\n                                                                                                                    //\n/**                                                                                                                 //\n * Create \"one-time\" reactive computations with Tracker                                                             //\n * @param name {string} Component Reactive Data Property for Computation                                            //\n * @param context {*} Target Component Instance                                                                     //\n * @param dataFunc {*} Data Context                                                                                 //\n * @param updateFunc {*} Component ForceUpdate Method - To re-trigger render function                               //\n * @returns {*} Symbol(react.element) - Result data-element composition                                             //\n */                                                                                                                 //\n_tracker.Tracker.once = function (name, context, dataFunc, updateFunc) {                                            // 12\n  var data = void 0;                                                                                                // 13\n                                                                                                                    //\n  // Stop it just in case the autorun never re-ran                                                                  //\n  if (context[name] && !context[name].stopped) context[name].stop();                                                // 12\n                                                                                                                    //\n  // NOTE: we may want to run this code in `setTimeout(func, 0)` so it doesn't impact the rendering phase at all    //\n  context[name] = _tracker.Tracker.nonreactive(function () {                                                        // 12\n    return _tracker.Tracker.autorun(function (c) {                                                                  // 20\n      if (c.firstRun) {                                                                                             // 21\n                                                                                                                    //\n        data = dataFunc.call(context);                                                                              // 23\n      } else {                                                                                                      //\n                                                                                                                    //\n        // Stop autorun here so rendering \"phase\" doesn't have extra work of also stopping autoruns; likely not too\n        // important though.                                                                                        //\n        if (context[name]) context[name].stop();                                                                    // 29\n                                                                                                                    //\n        // where `forceUpdate` will be called in above implementation                                               //\n        updateFunc.call(context);                                                                                   // 25\n      }                                                                                                             //\n    });                                                                                                             //\n  });                                                                                                               //\n                                                                                                                    //\n  return data;                                                                                                      // 37\n}; // Also available as a global                                                                                    //\n                                                                                                                    //\n                                                                                                                    //\nexports['default'] = _tracker.Tracker;                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}}}},{\"extensions\":[\".js\",\".json\"]});\nvar exports = require(\"./node_modules/meteor/ultimatejs:tracker-react/main.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['ultimatejs:tracker-react'] = exports;\n\n})();\n","servePath":"/packages/ultimatejs_tracker-react.js","sourceMap":{"version":3,"sources":["/packages/ultimatejs:tracker-react/main.js","/packages/ultimatejs:tracker-react/Tracker.js"],"names":[],"mappings":"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","file":"/packages/ultimatejs_tracker-react.js","sourcesContent":["/**\n * Tracker is available as a global variable but is extended for one time computations/invalidation.\n * Implementation: See ./Tracker.js\n */\nimport Tracker from './Tracker';\n\n/**\n * autorunRender(): The magic behind this computation is it only ever runs once after each time `render` is called.\n * When it does run that 2nd time, it's used just to force an update. The reactive function it wraps isn't even called.\n * Then on the update, the cycle repeats, and the computation is stopped, and a new one is made.\n *\n * Also, because the autorun is recreated on all React-triggered re-renders, any new code-paths possibly\n * taken in `render` will automatically begin tracking reactive dependencies, thereby MERGING both models of reactivity:\n * Meteor's various reactive data sources AND React's functional + unidirectional re-running of\n * everything in component branches with state changes.\n */\n\n\n/**\n * Default. Provides a react component for inheritance as a clean alternative to mixins.\n * Implementation:\n *    \"class MyApp extends TrackerReact(React.Component) { (...)\"\n * @param Component {*} React Component\n */\nexport default TrackerReact = function (Component, opt) {\n  // No reactive computations needed for Server Side Rendering\n  if (Meteor.isServer) return Component;\n\n  class TrackerReactComponent extends Component {\n\n    constructor(...args) {\n      super(...args);\n\n      /*\n       Overloading the constructors `componentWillUnmount` method to ensure that computations are stopped and a\n       forceUpdate prevented, without overwriting the prototype. This is a potential bug, as of React 14.7 the\n       componentWillUnmount() method does not fire, if the top level component has one. It gets overwritten. This\n       implementation is however similar to what a transpiler would do anyway.\n\n       GitHub Issue: https://github.com/facebook/react/issues/6162\n       */\n      if (!this.constructor.prototype._isExtended) {\n        this.constructor.prototype._isExtended = true;\n        let superComponentWillUnmount = this.constructor.prototype.componentWillUnmount;\n\n        this.constructor.prototype.componentWillUnmount = function (...args) {\n          superComponentWillUnmount.call(this, ...args);\n\n          this._renderComputation.stop();\n          this._renderComputation = null;\n        };\n      }\n\n      this.autorunRender();\n    }\n\n    autorunRender() {\n      let oldRender = this.render;\n\n      this.render = () => {\n        // Simple method we can offer in the `Meteor.Component` API\n        return this.autorunOnce('_renderComputation', oldRender);\n      };\n    }\n\n    autorunOnce(name, dataFunc) {\n      return Tracker.once(name, this, dataFunc, this.forceUpdate);\n    }\n  }\n\n  return TrackerReactComponent;\n};\n\n\n/**\n * Mixin. Use with ES7 / TypeScript Decorator or Mixin-Module.\n * Implementation:\n *   \"@TrackerReactMixin\n *    class MyApp extends React.Component { (...)\"\n * @type {{componentWillMount: (function()), componentWillUnmount: (function()), autorunRender: (function()),\n *   autorunOnce: (function(*=, *=))}}\n */\nexport const TrackerReactMixin = {\n  componentWillMount() {\n    // No reactive computations needed for Server Side Rendering\n    if (Meteor.isServer) return;\n\n    this.autorunRender();\n  },\n  componentWillUnmount() {\n    // No reactive computations needed for Server Side Rendering\n    if (Meteor.isServer) return;\n\n    this._renderComputation.stop();\n    this._renderComputation = null;\n  },\n  autorunRender() {\n    let oldRender = this.render;\n\n    this.render = () => {\n      // Simple method we can offer in the `Meteor.Component` API\n      return this.autorunOnce('_renderComputation', oldRender);\n    };\n  },\n  autorunOnce(name, dataFunc) {\n    return Tracker.once(name, this, dataFunc, this.forceUpdate);\n  }\n};\n","// Also available as a global\nimport {Tracker} from 'meteor/tracker';\n\n/**\n * Create \"one-time\" reactive computations with Tracker\n * @param name {string} Component Reactive Data Property for Computation\n * @param context {*} Target Component Instance\n * @param dataFunc {*} Data Context\n * @param updateFunc {*} Component ForceUpdate Method - To re-trigger render function\n * @returns {*} Symbol(react.element) - Result data-element composition\n */\nTracker.once = function (name, context, dataFunc, updateFunc) {\n  let data;\n\n  // Stop it just in case the autorun never re-ran\n  if (context[name] && !context[name].stopped) context[name].stop();\n\n  // NOTE: we may want to run this code in `setTimeout(func, 0)` so it doesn't impact the rendering phase at all\n  context[name] = Tracker.nonreactive(() => {\n    return Tracker.autorun(c => {\n      if (c.firstRun) {\n\n        data = dataFunc.call(context);\n\n      } else {\n\n        // Stop autorun here so rendering \"phase\" doesn't have extra work of also stopping autoruns; likely not too\n        // important though.\n        if (context[name]) context[name].stop();\n\n        // where `forceUpdate` will be called in above implementation\n        updateFunc.call(context);\n      }\n    });\n  });\n\n  return data;\n};\n\nexport default Tracker"]}}]