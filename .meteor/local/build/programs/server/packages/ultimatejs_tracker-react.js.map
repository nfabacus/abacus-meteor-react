{"version":3,"sources":["meteor://ðŸ’»app/packages/ultimatejs:tracker-react/main.js","meteor://ðŸ’»app/packages/ultimatejs:tracker-react/Tracker.js"],"names":[],"mappings":"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","file":"/packages/ultimatejs_tracker-react.js","sourcesContent":["/**\n * Tracker is available as a global variable but is extended for one time computations/invalidation.\n * Implementation: See ./Tracker.js\n */\nimport Tracker from './Tracker';\n\n/**\n * autorunRender(): The magic behind this computation is it only ever runs once after each time `render` is called.\n * When it does run that 2nd time, it's used just to force an update. The reactive function it wraps isn't even called.\n * Then on the update, the cycle repeats, and the computation is stopped, and a new one is made.\n *\n * Also, because the autorun is recreated on all React-triggered re-renders, any new code-paths possibly\n * taken in `render` will automatically begin tracking reactive dependencies, thereby MERGING both models of reactivity:\n * Meteor's various reactive data sources AND React's functional + unidirectional re-running of\n * everything in component branches with state changes.\n */\n\n\n/**\n * Default. Provides a react component for inheritance as a clean alternative to mixins.\n * Implementation:\n *    \"class MyApp extends TrackerReact(React.Component) { (...)\"\n * @param Component {*} React Component\n */\nexport default TrackerReact = function (Component, opt) {\n  // No reactive computations needed for Server Side Rendering\n  if (Meteor.isServer) return Component;\n\n  class TrackerReactComponent extends Component {\n\n    constructor(...args) {\n      super(...args);\n\n      /*\n       Overloading the constructors `componentWillUnmount` method to ensure that computations are stopped and a\n       forceUpdate prevented, without overwriting the prototype. This is a potential bug, as of React 14.7 the\n       componentWillUnmount() method does not fire, if the top level component has one. It gets overwritten. This\n       implementation is however similar to what a transpiler would do anyway.\n\n       GitHub Issue: https://github.com/facebook/react/issues/6162\n       */\n      if (!this.constructor.prototype._isExtended) {\n        this.constructor.prototype._isExtended = true;\n        let superComponentWillUnmount = this.constructor.prototype.componentWillUnmount;\n\n        this.constructor.prototype.componentWillUnmount = function (...args) {\n          superComponentWillUnmount.call(this, ...args);\n\n          this._renderComputation.stop();\n          this._renderComputation = null;\n        };\n      }\n\n      this.autorunRender();\n    }\n\n    autorunRender() {\n      let oldRender = this.render;\n\n      this.render = () => {\n        // Simple method we can offer in the `Meteor.Component` API\n        return this.autorunOnce('_renderComputation', oldRender);\n      };\n    }\n\n    autorunOnce(name, dataFunc) {\n      return Tracker.once(name, this, dataFunc, this.forceUpdate);\n    }\n  }\n\n  return TrackerReactComponent;\n};\n\n\n/**\n * Mixin. Use with ES7 / TypeScript Decorator or Mixin-Module.\n * Implementation:\n *   \"@TrackerReactMixin\n *    class MyApp extends React.Component { (...)\"\n * @type {{componentWillMount: (function()), componentWillUnmount: (function()), autorunRender: (function()),\n *   autorunOnce: (function(*=, *=))}}\n */\nexport const TrackerReactMixin = {\n  componentWillMount() {\n    // No reactive computations needed for Server Side Rendering\n    if (Meteor.isServer) return;\n\n    this.autorunRender();\n  },\n  componentWillUnmount() {\n    // No reactive computations needed for Server Side Rendering\n    if (Meteor.isServer) return;\n\n    this._renderComputation.stop();\n    this._renderComputation = null;\n  },\n  autorunRender() {\n    let oldRender = this.render;\n\n    this.render = () => {\n      // Simple method we can offer in the `Meteor.Component` API\n      return this.autorunOnce('_renderComputation', oldRender);\n    };\n  },\n  autorunOnce(name, dataFunc) {\n    return Tracker.once(name, this, dataFunc, this.forceUpdate);\n  }\n};\n","// Also available as a global\nimport {Tracker} from 'meteor/tracker';\n\n/**\n * Create \"one-time\" reactive computations with Tracker\n * @param name {string} Component Reactive Data Property for Computation\n * @param context {*} Target Component Instance\n * @param dataFunc {*} Data Context\n * @param updateFunc {*} Component ForceUpdate Method - To re-trigger render function\n * @returns {*} Symbol(react.element) - Result data-element composition\n */\nTracker.once = function (name, context, dataFunc, updateFunc) {\n  let data;\n\n  // Stop it just in case the autorun never re-ran\n  if (context[name] && !context[name].stopped) context[name].stop();\n\n  // NOTE: we may want to run this code in `setTimeout(func, 0)` so it doesn't impact the rendering phase at all\n  context[name] = Tracker.nonreactive(() => {\n    return Tracker.autorun(c => {\n      if (c.firstRun) {\n\n        data = dataFunc.call(context);\n\n      } else {\n\n        // Stop autorun here so rendering \"phase\" doesn't have extra work of also stopping autoruns; likely not too\n        // important though.\n        if (context[name]) context[name].stop();\n\n        // where `forceUpdate` will be called in above implementation\n        updateFunc.call(context);\n      }\n    });\n  });\n\n  return data;\n};\n\nexport default Tracker"]}